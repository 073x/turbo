name: Benchmark

on:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  CARGO_PROFILE_RELEASE_LTO: true
  RUST_BACKTRACE: 1

jobs:
  bench:
    strategy:
      fail-fast: false
      matrix:
        bench:
          - name: generic
            cache_key: all
          - name: turbopack
            cache_key: next-dev
            args: -p next-dev
            TURBOPACK_BENCH_COUNTS: all
          - name: next 12
            cache_key: next-dev
            args: -p next-dev -- "(Turbopack SSR|Next.js 12)"
            TURBOPACK_BENCH_BUNDLERS: all
          - name: next 11
            cache_key: next-dev
            args: -p next-dev -- "(Turbopack SSR|Next.js 11)"
            TURBOPACK_BENCH_BUNDLERS: all
          - name: vite
            cache_key: next-dev
            args: -p next-dev -- "(Turbopack CSR|Vite)""
            TURBOPACK_BENCH_BUNDLERS: all
    runs-on: ubuntu-latest-16-core
    name: bench - ${{ matrix.bench.name }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: 16

      - name: install node.js dependencies
        run: yarn install

      - uses: Swatinem/rust-cache@v1
        with:
          key: benchmark-${{ matrix.bench.cache_key }}

      - name: Clear benchmarks
        run: rm -rf target/criterion

      - name: Run cargo bench
        uses: actions-rs/cargo@v1
        timeout-minutes: 90
        env:
          TURBOPACK_BENCH_BUNDLERS: ${{ matrix.bench.TURBOPACK_BENCH_BUNDLERS }}
          TURBOPACK_BENCH_COUNTS: ${{ matrix.bench.TURBOPACK_BENCH_COUNTS }}
        with:
          command: bench
          args: ${{ matrix.bench.args }}

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: benchmark report ${{ matrix.bench.name }}
          path: target/criterion/

      # This avoids putting this data into the rust-cache
      - name: Clear benchmarks
        run: rm -rf target/criterion
