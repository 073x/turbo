name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: ubuntu-latest
            nextest: linux
          - name: macos-latest
            nextest: mac
          - name: windows-latest
            nextest: windows-tar
    runs-on: ${{ matrix.os.name }}
    name: test - ${{ matrix.os.name }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
        if: matrix.os.name == 'windows-latest'
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v1
        with:
          key: test

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: |
            crates/turbopack/tests/node-file-trace/yarn.lock
          node-version: 16

      - name: install Node.js dependencies
        run: |
          yarn install --frozen-lockfile
        working-directory: crates/turbopack/tests/node-file-trace
        if: matrix.os.name != 'windows-latest'

      - name: install Node.js dependencies
        run: |
          yarn install --frozen-lockfile --ignore-scripts
          yarn node-gyp install
          yarn install --force
        working-directory: crates/turbopack/tests/node-file-trace
        if: matrix.os.name == 'windows-latest'

      - name: Install nextest
        run: curl -LsSf https://get.nexte.st/latest/${{ matrix.os.nextest }} | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
        shell: bash

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --release

      - name: Run cargo test (benchmarks)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --benches
        if: matrix.os.name == 'ubuntu-latest'
