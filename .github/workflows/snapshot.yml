name: Snapshot

on:
  workflow_dispatch:

jobs:
  cross:
    runs-on: ubuntu-latest
    container:
      image: docker://ghcr.io/gsoltis/turbo-cross:v1.18.5

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.0
          cache: true
          cache-dependency-path: cli/go.sum

      - name: Set Up Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Up Go and GRPC protobuf
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          working-directory: cli

          # `golangci-lint-action` does not have an "install only" option.
          # We ignore the output of this run, instead using it just to install the binary.
          args: --issues-exit-code=0

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.2.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --filter=turbo-monorepo

      # - name: Configure git
      #   run: |
      #     git config --global user.name 'Turbobot'
      #     git config --global user.email 'turbobot@vercel.com'

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Snapshot
        run: cd cli && make snapshot-turbo-cross
      # - name: Snapshot
      #   uses: docker://ghcr.io/gsoltis/turbo-cross:v1.18.5
      #   #run: cd cli && make snapshot-turbo
      #   with:
      #     entrypoint: /bin/bash
      #     args: -c "cd cli && make snapshot-turbo"
      #   env:
      #     GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Upload snapshot
        uses: actions/upload-artifact@v3
        with:
          name: turbo-snapshot-cross
          path: cli/dist-cross

  darwin:
    runs-on: macos-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.0
          cache: true
          cache-dependency-path: cli/go.sum

      - name: Set Up Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Up Go and GRPC protobuf
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          working-directory: cli

          # `golangci-lint-action` does not have an "install only" option.
          # We ignore the output of this run, instead using it just to install the binary.
          args: --issues-exit-code=0

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.2.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --filter=turbo-monorepo

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Snapshot
        run: cd cli && make snapshot-turbo-darwin

      - name: Upload snapshot
        uses: actions/upload-artifact@v3
        with:
          name: turbo-snapshot-darwin
          path: cli/dist-darwin

  combined:
    needs: [cross, darwin]
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.0
          cache: true
          cache-dependency-path: cli/go.sum

      - name: Download Cross-compiled Artifacts
        uses: actions/download-artifact@v3
        with:
          name: turbo-snapshot-cross
          path: cli/dist-cross

      - name: Download Darwin Artifacts
        uses: actions/download-artifact@v3
        with:
          name: turbo-snapshot-darwin
          path: cli/dist-darwin

      - name: Combine Artifacts
        run: cd cli && mkdir -p dist-combined && cp -a dist-cross/. dist-combined/ && cp -a dist-darwin/. dist-combined/

      - name: Combined Snapshot
        run: cd cli && make snapshot-turbo

      - name: Upload snapshot
        uses: actions/upload-artifact@v3
        with:
          name: turbo-snapshot-combined
          path: cli/dist
